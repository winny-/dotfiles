#!/usr/bin/env bash
# Quick and dirty interface for looking up words.

set -eu -o pipefail

workdir=$(mktemp -td wdict.XXXXXX)
cleanup() {
    rm -rf "$workdir"
}
trap cleanup EXIT

dict() {
    local word code filename lessprompt
    code=0
    word="$1"
    # Grabbed this from the environment variable $LESS belonging to the process
    # forked from "man less".
    lessprompt="dict \"$word\" ?ltline %lt?L/%L.:byte %bB?s/%s..?e (END):?pB %pB\\%.. (press h for help or q to quit)"
    export LESS="-Pm${lessprompt}\$-PM${lessprompt}\$-M\$-b64"
    # Write the de
    filename="${workdir}/${RANDOM}.txt"
    {
        set +e
        command dict "$word" &> "$filename"
        code=$?
        set -e
    }
    if (( code != 0 )); then
        # See "man 1 dict" /EXIT STATUS.
        cat "$filename" >&2
        if (( code = 20 )) || (( code = 21)); then
            # No match.
            return
        else
            return $code
        fi
    else
        head -n1 "$filename"  # print number of matches to terminal.
        less "$filename"  # Use pager for entire dict output.
    fi
}

usage() {
    echo 'wdict                  # Interactive mode'
    echo 'wdict [--] words ...   # Look up each word'
    echo 'wdict <--help|help|-?> # print this usage text'
    exit
}

if [[ $# -gt 0 ]]; then
    words=()
    for arg in "$@"; do
        case "$arg" in
            --)
                shift
                break
                ;;
            -*|\?|help|'')
                usage
                ;;
            *)
                words+=("$arg")
                ;;
        esac
    done
    if [[ ${#words[@]} -eq 0 ]]; then
        usage
    fi
    for word in "${words[@]}"; do
        dict "$word"
    done
else
    while read -p 'Word? ' -r -e word; do
        [[ -z $word ]] && break
        dict "$word"
    done
fi

